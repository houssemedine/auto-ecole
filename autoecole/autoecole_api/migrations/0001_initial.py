# Generated by Django 5.2.6 on 2025-09-07 20:10

import autoecole_api.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('duration', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('tel_code', models.CharField(max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LicenceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('comment', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=50)),
            ],
            options={
                'ordering': ['title'],
            },
            bases=(models.Model, autoecole_api.models.SoftDeleteManager),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(error_messages={'unique': 'A school with this code already exists.'}, max_length=50, unique=True, verbose_name='code')),
                ('adress', models.TextField(blank=True, max_length=150, null=True, verbose_name='address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='city')),
                ('governorate', models.CharField(blank=True, max_length=50, null=True, verbose_name='governorate')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='country')),
                ('speciality', models.CharField(blank=True, max_length=50, null=True, verbose_name='specialty')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('tel', models.IntegerField(blank=True, null=True, verbose_name='phone')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='logo')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'schools',
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SessionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(default='Conduite', max_length=50)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'Guest'), (2, 'Admin'), (3, 'Owner'), (4, 'Trainer'), (5, 'Student')], default=1, verbose_name='role')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=autoecole_api.models.avatar_upload_to, verbose_name='profile photo')),
                ('phone', models.IntegerField(blank=True, null=True, verbose_name='phone')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='full name')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birth date')),
                ('cin', models.CharField(blank=True, db_index=True, error_messages={'unique': 'A user with this CIN already exists.'}, max_length=50, null=True, verbose_name='CIN')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female')], null=True, verbose_name='gender')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('start_at', models.DateField(verbose_name='start date')),
                ('end_at', models.DateField(blank=True, null=True, verbose_name='end date')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='price')),
                ('hour_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='hour price')),
                ('hours_number', models.IntegerField(blank=True, null=True, verbose_name='number of hours')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='discount')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL, verbose_name='student')),
                ('licence_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='licence_type', to='autoecole_api.licencetype', verbose_name='licence type')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_card', to='autoecole_api.school', verbose_name='school')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='status', to='autoecole_api.status', verbose_name='status')),
            ],
            options={
                'verbose_name': 'card',
                'verbose_name_plural': 'cards',
                'ordering': ['licence_type'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('expo', 'Expo'), ('fcm', 'FCM')], db_index=True, default='expo', max_length=10)),
                ('token', models.CharField(db_index=True, max_length=255)),
                ('platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], db_index=True, max_length=10)),
                ('app_version', models.CharField(blank=True, max_length=50)),
                ('locale', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Governorate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoecole_api.country')),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('governorate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoecole_api.governorate')),
            ],
            options={
                'ordering': ['name'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='governorate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='autoecole_api.governorate', verbose_name='governorate'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('module', models.CharField(choices=[('car', 'Car'), ('session', 'Session'), ('payment', 'Payment'), ('appointment', 'Appointment'), ('student', 'Student'), ('card', 'Card')], db_index=True, max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('high', 'High')], default='normal', max_length=10)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('date_sent', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoecole_api.notificationtype')),
            ],
            options={
                'ordering': ['-date_sent', 'user'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='OTPCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('registration', 'Registration')], max_length=32)),
                ('code_hash', models.CharField(max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('max_attempts', models.PositiveSmallIntegerField(default=5)),
                ('is_used', models.BooleanField(default=False)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS')], max_length=16)),
                ('destination', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='amount')),
                ('date', models.DateField(verbose_name='date')),
                ('motive', models.CharField(blank=True, max_length=50, null=True, verbose_name='reason')),
                ('method', models.CharField(default='espéces', max_length=50, verbose_name='method')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardP', to='autoecole_api.card', verbose_name='card')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'ordering': ['-date'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('serial_number', models.CharField(error_messages={'unique': 'A car with this serial number already exists.'}, max_length=50, unique=True, verbose_name='serial number')),
                ('marque', models.CharField(blank=True, max_length=50, null=True, verbose_name='brand')),
                ('model', models.CharField(blank=True, max_length=50, null=True, verbose_name='model')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='purchase date')),
                ('fuel_type', models.CharField(blank=True, choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Gaz', 'Gaz'), ('Electric', 'Electric')], max_length=50, verbose_name='fuel type')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoecole_api.school', verbose_name='school')),
            ],
            options={
                'verbose_name': 'car',
                'verbose_name_plural': 'cars',
                'ordering': ['marque'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='autoecole_api.school', verbose_name='school'),
        ),
        migrations.CreateModel(
            name='SchoolSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('duration', models.IntegerField()),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('other', 'Other')], default='cash', max_length=50)),
                ('comment', models.TextField(blank=True, null=True)),
                ('trial', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='autoecole_api.school')),
            ],
            options={
                'ordering': ['school', '-date'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('day', models.DateField(verbose_name='day')),
                ('start_at', models.TimeField(verbose_name='start time')),
                ('end_at', models.TimeField(verbose_name='end time')),
                ('note', models.CharField(blank=True, max_length=100, null=True, verbose_name='note')),
                ('event_type', models.CharField(choices=[('session', 'Session'), ('other', 'other')], default='session', max_length=50, verbose_name='event type')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='cancelled')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='price')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='car', to='autoecole_api.car', verbose_name='car')),
                ('card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card', to='autoecole_api.card', verbose_name='card')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL, verbose_name='employee')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school', to='autoecole_api.school', verbose_name='school')),
                ('session_type', models.ForeignKey(default='4', on_delete=django.db.models.deletion.DO_NOTHING, related_name='session_type', to='autoecole_api.sessiontype', verbose_name='session type')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
                'ordering': ['day'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CardStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField()),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_history', to='autoecole_api.card')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='autoecole_api.status')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_by', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('restored_by', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('dark_mode', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='autoecole_api.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
            managers=[
                ('undeleted_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], db_index=True, default='pending', max_length=10)),
                ('fcm_message_id', models.CharField(blank=True, max_length=200)),
                ('error_code', models.CharField(blank=True, max_length=100)),
                ('error_detail', models.TextField(blank=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='autoecole_api.device')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='autoecole_api.notification')),
            ],
            options={
                'indexes': [models.Index(fields=['status', 'updated_at'], name='autoecole_a_status_b06d72_idx')],
                'unique_together': {('notification', 'device')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='autoecole_a_user_id_7e9294_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['module', 'date_sent'], name='autoecole_a_module_ff0925_idx'),
        ),
        migrations.AddIndex(
            model_name='otpcode',
            index=models.Index(fields=['user', 'purpose', 'is_used', 'expires_at'], name='autoecole_a_user_id_6868cf_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('school', 'phone'), name='uniq_user_school_phone'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('school', 'cin'), name='uniq_user_school_cin'),
        ),
    ]
